#!/bin/sh

# Example AppRun for using the hooks of this repository.
# NOTE: It is meant to be used with sharun which uses a top level bin dir
# NOTE2: If you do not need the hooks DO NOT USE THIS SCRIPT!!
# sharun itself can work as teh AppRun and that is much better!

if [ "$APPRUN_DEBUG" = 1 ]; then
	set -x
fi

set -e

APPIMAGE_ARCH=@@@@@
CURRENTDIR="$(cd "${0%/*}" && echo "$PWD")"
BIN="${ARGV0:-$0}"
BIN="${BIN##*/}"

export PATH="$CURRENTDIR/bin:$PATH"

# get name of main binary from the .desktop file
_get_main_bin_name() {
	for f in "$CURRENTDIR"/*.desktop; do
		[ -e "$f" ] || return 1
		while IFS= read -r line; do
			case "$line" in
				Exec=*)
					# strip Exec=
					MAIN_BIN="${line#Exec=}"
					# only get the bin name
					MAIN_BIN="${MAIN_BIN##*/}"
					# remove spaces and flags
					MAIN_BIN="${MAIN_BIN%% *}"
					return 0
					;;
			esac
		done < "$f"
	done
	return 1
}

_get_main_bin_name

# Allow users to set env variables for specific AppImage
# This feature only works with the uruntime
if [ "$1" = '--appimage-add-env' ]; then
	shift
	for v do
		echo "$v" >> "$APPIMAGE".env
		>&2 echo "Added '$v' to $APPIMAGE.env"
	done
	exit 0
fi

# additional scripts can be placed in the top level bin dir
# those with a name that ends up .hook will be executed in the current shell
# those that end with .bg.hook will be executed in the background
# and those that end with .src.hook will be sourced in the AppRun
for hook in "$CURRENTDIR"/bin/*.hook; do
	[ -x "$hook" ] || continue
	case "$hook" in
		*.src.hook) continue ;;
		*.bg.hook)  "$hook" &;;
		*.hook)     "$hook"  ;;
	esac
done

# source hooks need to run last
for hook in "$CURRENTDIR"/bin/*.src.hook; do
	[ -e "$hook" ] || continue
	. "$hook"
done

# always unset ARGVO to avoid causing issues to child processes that use zsh
# We do it after running the hooks since some hooks need it
unset ARGV0

# Check if BIN (ARGV0) matches a binary, fallback to $1, then binary in .desktop
if [ -f "$CURRENTDIR"/bin/"$BIN" ]; then
	TO_LAUNCH="$CURRENTDIR"/bin/"$BIN"
elif [ -f "$CURRENTDIR"/bin/"$1" ]; then
	TO_LAUNCH="$CURRENTDIR"/bin/"$1"
	shift
else
	TO_LAUNCH="$CURRENTDIR"/bin/"$MAIN_BIN"
fi

# If LD_DEBUG=libs is set outside the AppImage the output is not helpful
# because it will include the libs of sh, grep, cat, etc from the hooks
# with this var we can set LD_DEBUG=libs for the bundled application only
if [ "$APPIMAGE_DEBUG" = 1 ]; then
	export LD_DEBUG=libs
	export VK_LOADER_DEBUG=all
	export LC_ALL=C
	export SHARUN_PRINTENV=1
	"$TO_LAUNCH" "$@" 2>"$HOME"/"${APPIMAGE##*/}"-debug.log
	>&2 echo "Debug log at: '$HOME/${APPIMAGE##*/}-debug.log'"
else
	exec "$TO_LAUNCH" "$@"
fi
