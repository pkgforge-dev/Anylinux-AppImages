#!/bin/sh

# This AppRun is Qt apps. checks for a .stylesheet file next to the AppImage
# setst the var APPIMAGE_QT_THEME to it and passes it to the array to be loaded
# NOTE: It is meant to be used with sharun which uses a top level bin dir

if [ "$APPRUN_DEBUG" = 1 ]; then
	set -x
fi

set -e

CURRENTDIR="$(cd "${0%/*}" && echo "$PWD")"
PATH="$CURRENTDIR/bin:$PATH"
export PATH
BIN="${ARGV0:-$0}"
BIN="${BIN##*/}"
unset ARGV0

# get name of main binary from the .desktop file
_get_main_bin_name() {
	for f in "$CURRENTDIR"/*.desktop; do
		[ -e "$f" ] || return 1
		while IFS= read -r line; do
			case "$line" in
				Exec=*)
					# strip Exec=
					MAIN_BIN="${line#Exec=}"
					# only get the bin name
					MAIN_BIN="${MAIN_BIN##*/}"
					# remove spaces and flags
					MAIN_BIN="${MAIN_BIN%% *}"
					return 0
					;;
			esac
		done < "$f"
	done
	return 1
}

_get_main_bin_name

# additional scripts can be placed in the top level bin dir
# those with a name that ends up .hook will be executed in teh current shell
# while those that end with bg.hook will be executed in the background
for hook in "$CURRENTDIR"/bin/*.hook; do
	[ -x "$hook" ] || continue
	case "$hook" in
		*.bg.hook) >&2 echo "exec bg hook: $hook"; "$hook" &;;
		*.hook)    >&2 echo "exec hook: $hook";    "$hook"  ;;
	esac
done

# check if there is a custom stylesheet and append it to the arrray
if [ -f "$APPIMAGE".stylesheet ]; then
	APPIMAGE_QT_THEME="$APPIMAGE.stylesheet"
fi
if [ -f "$APPIMAGE_QT_THEME" ]; then
	set -- "$@" "-stylesheet" "$APPIMAGE_QT_THEME"
fi

# Check if ARGV0 matches any bundled binary, fallback to $1, then main bin
if [ -f "$CURRENTDIR"/bin/"$BIN" ]; then
	exec "$CURRENTDIR"/bin/"$BIN" "$@"
elif [ -f "$CURRENTDIR"/bin/"$1" ]; then
	BIN="$1"
	shift
	exec "$CURRENTDIR"/bin/"$BIN" "$@"
else
	exec "$CURRENTDIR"/bin/"$MAIN_BIN" "$@"
fi
